# Base URL of the silex application. Necessary to generate the IRIs of JSON-LD
# events.
url: http://example.com
uitid:
  consumer:
    key: ***
    secret: ***
  base_url: http://www.uitid.be/uitid/rest/
  apis:
    entry: entry/rest.uitdatabank.be/api/v2
    search: searchv2
  # ID of the user to impersonate for certain requests to the Entry API that use
  # Light UiTID authentication.
  impersonation_user_id: ***
sync_with_udb2: true
cors:
  origins: []
log.search: []
log.command_bus:
  #- type: hipchat
  #  token: ***
  #  room: ***
  #  level: ALERT
  - type: file
    path: ../log/command_bus.log
    level: DEBUG
  - type: socketioemitter
    redis:
      host: 127.0.0.1
      port: 6379
    #namespace: ***
    #room: ***
    level: INFO
database:
  driver: pdo_mysql
  dbname: ***
  user: ***
  password: ***
  host: 127.0.0.1
swiftmailer.options:
  # This connects to a mailserver at port 1025
  # This is not the standard SMTP port, but the default port of Mailcatcher,
  # a great tool for debugging mail. Check it out! http://mailcatcher.me/
  host: 127.0.0.1
  port: 1025
mail:
  sender:
    name: UiTdatabank BETA
    address: no-reply@uitdatabank.be
export:
  mail:
    subject: Uw export van evenementen
amqp:
  host: example.com
  port: 5672
  user: foo
  password: bar
  vhost: example
  consumer_tag: udb3
    consume:
      udb2:
        exchange: udb2.e.prod
        queue: udb3.q.prod.udb2
prince:
  binary: /usr/local/bin/prince

cache:
  # Currently supported: "filesystem" or "redis"
  active: redis
  redis:
    host: 127.0.0.1
    database: 1
# Regular expression pattern to match valid event URLs.
# Use a capturing group named 'eventid' to extract the event's ID.
event_url_regex: https?://example\.com/event/(?<eventid>[a-zA-Z0-9\-]+)

oauth:
  base_url:
  consumer:
    key:
    secret:
redis:
  # uri: tcp://127.0.0.1:6379
entryapi:
  link_base_url:
