{
    "swagger": "2.0",
    "info": {
        "title": "UiTdatabank v3",
        "description": "Version 3 of the UiTdatabank, a central database of cultural offers in the Flanders region.\n\nMost operations require that you authenticate first with your UiTID.",
        "version": "3.0.0",
        "contact": {
            "name": "CultuurNet Vlaanderen vzw",
            "url": "http://www.cultuurnet.be",
            "email": "info@uitdatabank.be"
        }
    },
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json",
        "application/ld+json",
        "application/xml"
    ],
    "paths": {
        "/api/1.0/event": {
            "post": {
                "summary": "Create a new cultural event.",
                "operationId": "createEvent",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the necessary information to create a new cultural event.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventCreationData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created event.",
                        "schema": {
                            "properties": {
                                "eventId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The unique identifier of the cultural event.",
                                    "example": "0823f57e-a6bd-450a-b4f5-8459b4b11043"
                                },
                                "url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The URL of the cultural event.",
                                    "example": "http://culudb-silex.dev:8080/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                                }
                            },
                            "required": [
                                "eventId",
                                "url"
                            ]
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}": {
            "get": {
                "summary": "View the details of a specific cultural event.",
                "operationId": "getEvent",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An event detail.",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/organizer": {
            "post": {
                "summary": "Add an organizer to an event.",
                "operationId": "addEventOrganizer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the organizer to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOrganizerToOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An event detail.",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/history": {
            "get": {
                "summary": "View the change log / history of a specific cultural event.",
                "operationId": "getEventHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The event history.",
                        "schema": {
                            "$ref": "#/definitions/EventHistory"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/permission": {
            "get": {
                "summary": "Whether the current user has permission to update.",
                "operationId": "hasEventEditingPermission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "has permission.",
                        "schema": {
                            "properties": {
                                "hasPermission": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "required": [
                                "hasPermission"
                            ]
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/{lang}/title": {
            "post": {
                "summary": "Translate the title of a cultural event.",
                "description": "Authentication is required.",
                "operationId": "translateEventTitle",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "description": "The language of the translation.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "fr",
                            "de",
                            "en"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the title in the given language for the given cultural event.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithEventTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/{lang}/description": {
            "post": {
                "summary": "Translate the description of a cultural event.",
                "description": "Authentication is required.",
                "operationId": "translateEventDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "description": "The language of the translation.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "fr",
                            "de",
                            "en"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the description in the given language for the given cultural event.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithEventDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/typical-age-range": {
            "post": {
                "summary": "Set the typical age range of an event.",
                "operationId": "setEventTypicalAgeRange",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The age range to set for the event.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typicalAgeRangeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "delete": {
                "summary": "Remove the typical age range from an event.",
                "operationId": "removeEventTypicalAgeRange",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/event/{cdbid}/labels": {
            "post": {
                "summary": "Add a label to a single cultural event.",
                "description": "Authentication is required.",
                "operationId": "addLabelToEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the label to attach to the cultural event.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/labelCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event",
                    "Label"
                ]
            }
        },
        "/offers/labels": {
            "post": {
                "summary": "Add a label to multiple cultural events.",
                "description": "Authentication is required",
                "operationId": "addLabelToOffers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing information about the label and the cultural events.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithlabelAndMultipleOffers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event",
                    "Place",
                    "Label"
                ]
            }
        },
        "/event/{cdbid}/images": {
            "post": {
                "summary": "Add an MediaObject to the Event",
                "description": "Authentication is required",
                "operationId": "EventAddImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The universally unique identifier of the event object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the image to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addImageToOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "Media with id: {id} not found."
                    }
                },
                "tags": [
                    "Event",
                    "Media"
                ]
            }
        },
        "/event/{cdbid}/images/main": {
            "post": {
                "summary": "Select the main image of an event.",
                "description": "Authentication is required",
                "operationId": "SelectEventMainImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The universally unique identifier of the event object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the image to select as main.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/selectMainImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "Media with id: {id} not found."
                    }
                },
                "tags": [
                    "Event",
                    "Media"
                ]
            }
        },
        "/event/{eventId}/images/{mediaObjectId}": {
            "post": {
                "summary": "Update the info of an event image.",
                "description": "Authentication is required.",
                "operationId": "updateEventImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "The unique identifier of the event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "mediaObjectId",
                        "in": "path",
                        "description": "The unique identifier of the image media object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the image information that has to be changed.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/imageUpdateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event",
                    "Media"
                ]
            },
            "delete": {
                "summary": "Remove an image from the event.",
                "description": "Authentication is required",
                "operationId": "EventRemoveImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "The universally unique identifier of the event object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "mediaObjectId",
                        "in": "path",
                        "description": "The universally unique identifier of an event's image.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event",
                    "Media"
                ]
            }
        },
        "/event/{cdbid}/labels/{label}": {
            "delete": {
                "summary": "Remove a label from a cultural event.",
                "description": "Authentication is required.",
                "operationId": "removeLabelFromEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the cultural event.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "label",
                        "in": "path",
                        "description": "The label to remove from the cultural event.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Event",
                    "Label"
                ]
            }
        },
        "/query/labels": {
            "post": {
                "summary": "Add a label to a query",
                "description": "Authentication is required.",
                "operationId": "addLabelToQuery",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing information about the label and the query.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithLabelAndQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Query",
                    "Label"
                ]
            }
        },
        "/places": {
            "get": {
                "summary": "List places.",
                "description": "",
                "operationId": "listPlaces",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "zipcode",
                        "in": "query",
                        "description": "Limit the list to places located in the area with this postal code.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of places matching the supplied criteria.",
                        "schema": {
                            "$ref": "#/definitions/PlacesList"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}": {
            "get": {
                "summary": "View the details of a specific place.",
                "operationId": "getPlace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An event detail.",
                        "schema": {
                            "$ref": "#/definitions/Place"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/organizer": {
            "post": {
                "summary": "Add an organizer to a place.",
                "operationId": "addPlaceOrganizer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the organizer to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOrganizerToOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An event detail.",
                        "schema": {
                            "$ref": "#/definitions/Place"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/typical-age-range": {
            "post": {
                "summary": "Set the typical age range of a place.",
                "operationId": "setPlaceTypicalAgeRange",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The age range to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typicalAgeRangeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            },
            "delete": {
                "summary": "Remove the a typical age range from a place.",
                "operationId": "removePlaceTypicalAgeRange",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/permission": {
            "get": {
                "summary": "Whether the current user has permission to update.",
                "operationId": "hasPlaceEditingPermission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "has permission.",
                        "schema": {
                            "properties": {
                                "hasPermission": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "required": [
                                "hasPermission"
                            ]
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/images": {
            "post": {
                "summary": "Add an MediaObject to the Place",
                "description": "Authentication is required",
                "operationId": "PlaceAddImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The universally unique identifier of the place object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the image to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addImageToOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "Media with id: {id} not found."
                    }
                },
                "tags": [
                    "Place",
                    "Media"
                ]
            }
        },
        "/place/{cdbid}/images/main": {
            "post": {
                "summary": "Select the main image of a place.",
                "description": "Authentication is required",
                "operationId": "SelectPlaceMainImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The universally unique identifier of the place object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UUID of the image to select as main.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/selectMainImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "Media with id: {id} not found."
                    }
                },
                "tags": [
                    "Place",
                    "Media"
                ]
            }
        },
        "/place/{placeId}/images/{mediaObjectId}": {
            "post": {
                "summary": "Update the info of a place image.",
                "description": "Authentication is required.",
                "operationId": "updatePlaceImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placeId",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "mediaObjectId",
                        "in": "path",
                        "description": "The unique identifier of the image media object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the image information that has to be changed.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/imageUpdateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place",
                    "Media"
                ]
            },
            "delete": {
                "summary": "Remove an image from the place.",
                "description": "Authentication is required",
                "operationId": "PlaceRemoveImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "placeId",
                        "in": "path",
                        "description": "The universally unique identifier of the place object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "mediaObjectId",
                        "in": "path",
                        "description": "The universally unique identifier of a place's image.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place",
                    "Media"
                ]
            }
        },
        "/place/{cdbid}/labels": {
            "post": {
                "summary": "Add a label to a single place.",
                "description": "Authentication is required.",
                "operationId": "addLabelToPlace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the label to attach to the place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/labelCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place",
                    "Label"
                ]
            }
        },
        "/place/{cdbid}/labels/{label}": {
            "delete": {
                "summary": "Remove a label from a place.",
                "description": "Authentication is required.",
                "operationId": "removeLabelFromPlace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "label",
                        "in": "path",
                        "description": "The label to remove from the place.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place",
                    "Label"
                ]
            }
        },
        "/place/{cdbid}/{lang}/title": {
            "post": {
                "summary": "Translate the title of a place.",
                "description": "Authentication is required.",
                "operationId": "translatePlaceTitle",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "description": "The language of the translation.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "fr",
                            "de",
                            "en"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the title in the given language for the given place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithPlaceTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/{lang}/description": {
            "post": {
                "summary": "Translate the description of a place.",
                "description": "Authentication is required.",
                "operationId": "translatePlaceDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "description": "The language of the translation.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "fr",
                            "de",
                            "en"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the description in the given language for the given place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithPlaceDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/major-info": {
            "post": {
                "summary": "Update the place major info.",
                "operationId": "updateMajorInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing major info for a place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postPlaceObjectMajorInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the command id.",
                        "schema": {
                            "properties": {
                                "commandId": {
                                    "type": "string",
                                    "example": "f45d25fba17acd1742b2a89a0058dbc4"
                                }
                            },
                            "required": [
                                "commandId"
                            ]
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/bookingInfo": {
            "post": {
                "summary": "Update the place booking info.",
                "operationId": "updateBookingInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing bookinginfo for a place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postPlaceObjectBookingInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the command id.",
                        "schema": {
                            "properties": {
                                "commandId": {
                                    "type": "string",
                                    "example": "f45d25fba17acd1742b2a89a0058dbc4"
                                }
                            },
                            "required": [
                                "commandId"
                            ]
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/place/{cdbid}/contactPoint": {
            "post": {
                "summary": "Update the place contact point.",
                "operationId": "updateContactPoint",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the place.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the contact point for a place.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postPlaceObjectContactPoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the command id.",
                        "schema": {
                            "properties": {
                                "commandId": {
                                    "type": "string",
                                    "example": "f45d25fba17acd1742b2a89a0058dbc4"
                                }
                            },
                            "required": [
                                "commandId"
                            ]
                        }
                    }
                },
                "tags": [
                    "Place"
                ]
            }
        },
        "/organizer/{cdbid}": {
            "get": {
                "summary": "View the details of a specific organizer.",
                "operationId": "getOrganizer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the organizer.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An organizer detail.",
                        "schema": {
                            "$ref": "#/definitions/Organizer"
                        }
                    }
                },
                "tags": [
                    "Organizer"
                ]
            },
            "delete": {
                "summary": "Delete a specific organizer.",
                "operationId": "deleteOperation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cdbid",
                        "in": "path",
                        "description": "The unique identifier of the organizer.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Organizer"
                ]
            }
        },
        "/api/1.0/organizer/suggest/{term}": {
            "get": {
                "summary": "Get the list of organizers which contain {term} in their title.",
                "operationId": "findByPartOfTitle",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "description": "The term which will be or be part of the title of the organizer.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of organizers whose title contains {term}.",
                        "schema": {
                            "$ref": "#/definitions/ListOfOrganizers"
                        }
                    }
                },
                "tags": [
                    "Organizer"
                ]
            }
        },
        "/api/1.0/organizer": {
            "post": {
                "summary": "Create an organizer.",
                "operationId": "createOrganizer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing information about Organizer.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The organizerId and it's url.",
                        "schema": {
                            "$ref": "#/definitions/OrganizerId"
                        }
                    }


                },
                "tags": [
                    "Organizer"
                ]
            }
        },
        "/uitid/user": {
            "get": {
                "summary": "Retrieve all information about the current user.",
                "description": "Authentication is required.",
                "operationId": "getUserInformation",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The information available about the current user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "User"
                ]
            }
        },
        "/api/1.0/user/labels": {
            "get": {
                "summary": "Retrieve labels used recently by the current user.",
                "description": "Authentication is required.",
                "operationId": "getRecentlyUsedLabels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of labels recently used by the current user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "Label name"
                            }
                        }
                    }
                },
                "tags": [
                    "User"
                ]
            }
        },
        "/api/1.0/search": {
            "get": {
                "summary": "Retrieve events for a given search query with a given start and limit.",
                "description": "Authentication is required.",
                "operationId": "apiSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The search query to execute.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit of events included in the result set. When omitted it defaults to 30 items.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The number of events to skip from the start of the result set.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "How to order the search results.\n\nSpecify a field and an optional direction (asc or desc) separated by a space. A list of sortable fields is available at: https://docs.google.com/spreadsheets/d/1Y0DPDrPXNx45ePCo7N2fGknFO9AQDuf_m7dK_PpYBzM. The default order is 'lastupdated desc'.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of events",
                        "schema": {
                            "$ref": "#/definitions/SearchResult"
                        }
                    }
                },
                "tags": [
                    "Search"
                ]
            }
        },
        "/saved-searches/": {
            "get": {
                "summary": "Get a list of saved searches for the current user.",
                "description": "Authentication is required.",
                "operationId": "getSavedSearchs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A list of saved searches.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SavedSearch"
                            }
                        }
                    }
                },
                "tags": [
                    "Saved search"
                ]
            },
            "post": {
                "summary": "Save a search for the current user.",
                "description": "Authentication is required.",
                "operationId": "addSavedSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the the required information to create a new saved search.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectWithNewSavedSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Saved search"
                ]
            }
        },
        "/saved-searches/{id}": {
            "delete": {
                "summary": "Remove a saved search for the current user.",
                "description": "Authentication is required.",
                "operationId": "removeSavedSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the saved search to remove.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Saved search"
                ]
            }
        },
        "/events/export/csv": {
            "post": {
                "summary": "Request to generate an event list exported to a file.",
                "description": "Authentication is required.",
                "operationId": "getEventCSVExport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the required information for an export of cultural events.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectForExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Export",
                    "Event"
                ]
            }
        },
        "/events/export/json": {
            "post": {
                "summary": "Request to generate an event list exported to a file.",
                "description": "Authentication is required.",
                "operationId": "getEventJSONExport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the required information for an export of cultural events.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectForExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Export",
                    "Event"
                ]
            }
        },
        "/events/export/ooxml": {
            "post": {
                "summary": "Request to generate an event list exported to a file.",
                "description": "Authentication is required.",
                "operationId": "getEventOOXMLExport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the required information for an export of cultural events.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectForExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Export",
                    "Event"
                ]
            }
        },
        "/events/export/pdf": {
            "post": {
                "summary": "Request to generate an event list exported to a file.",
                "description": "Authentication is required.",
                "operationId": "getEventPDFExport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the required information for an export of cultural events.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectForPdfExportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Export",
                    "Event"
                ]
            }
        },
        "/variations/": {
            "post": {
                "summary": "Add a new variation of an existing event.",
                "description": "Authentication is required",
                "operationId": "addVariation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Original URL of the event and a custom description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateVariationCommand"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "There is an error in the request.",
                        "schema": {
                            "$ref": "#/definitions/APIProblem"
                        }
                    }
                },
                "tags": [
                    "Variations"
                ]
            },
            "get": {
                "summary": "List variations.",
                "description": "Authentication is required",
                "operationId": "listVariations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "Limit the list to variations owned by a particular user. Specify the user's universally unique identifier.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "purpose",
                        "in": "query",
                        "description": "Limit the list to variations with this purpose.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "same_as",
                        "in": "query",
                        "description": "Limit the list to variations of this event url.",
                        "required": false,
                        "type": "string",
                        "format": "url"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of variations matching the supplied criteria.",
                        "schema": {
                            "$ref": "#/definitions/VariationsList"
                        }
                    }
                },
                "tags": [
                    "Variations"
                ]
            }
        },
        "/variations/{id}": {
            "get": {
                "summary": "View the details of a specific variation.",
                "description": "Authentication is required",
                "operationId": "getVariation",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The universally unique identifier of the variation.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An event detail.",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        },
                        "examples": {
                            "@id": "http://culudb-silex.dev:8080/variations/04C47992-B01E-4EE4-96ED-289F22638324",
                            "name": {
                                "nl": "Nederlands",
                                "de": "Deutch",
                                "en": "English",
                                "fr": "Français"
                            },
                            "description": {
                                "nl": "Alternatieve beschrijving in het Nederlands",
                                "de": "Deutch",
                                "en": "English",
                                "fr": "Français"
                            },
                            "available": "2015-05-07T12:02:53+00:00",
                            "image": "http://media.uitdatabank.be/20150416/153cfa0f-0d22-451e-bfd1-490b7c4ef109.jpg",
                            "labels": [
                                "tagged"
                            ],
                            "calendarSummary": "Every first day of the month",
                            "location": {
                                "description": "Or not to be.",
                                "name": "This is the place to be",
                                "address": {
                                    "addressCountry": "BE",
                                    "addressLocality": "Leuven",
                                    "postalCode": 3000,
                                    "streetAddress": "Sluisstraat 79"
                                },
                                "bookingInfo": {
                                    "priceCurrency": "EUR",
                                    "description": "No need to pay anything",
                                    "name": "Free",
                                    "price": 0
                                },
                                "terms": [
                                    {
                                        "label": "Cycling",
                                        "domain": "activities",
                                        "id": "10.0.0.1"
                                    }
                                ]
                            },
                            "organizer": {
                                "name": "STUK",
                                "address": {
                                    "addressCountry": "BE",
                                    "addressLocality": "Leuven",
                                    "postalCode": 3000,
                                    "streetAddress": "Sluisstraat 79"
                                },
                                "email": "info@stuk.be",
                                "phone": [
                                    "016 320 300"
                                ]
                            },
                            "bookingInfo": {
                                "priceCurrency": "EUR",
                                "description": "No need to pay anything",
                                "name": "Free",
                                "price": 0
                            },
                            "terms": [
                                {
                                    "label": "Cycling",
                                    "domain": "activities",
                                    "id": "10.0.0.1"
                                }
                            ],
                            "creator": "evenementen@stad.diksmuide.be",
                            "created": "2015-05-07T12:02:53+00:00",
                            "modified": "2015-05-07T12:02:53+00:00",
                            "publisher": "Invoerders Algemeen ",
                            "endDate": "2015-05-07T12:02:53+00:00",
                            "startDate": "2015-05-07T12:02:53+00:00",
                            "calendarType": "permanent",
                            "typicalAgeRange": "+18",
                            "performer": [
                                {
                                    "name": "Sindicato Sonico"
                                }
                            ],
                            "sameAs": [
                                "http://culudb-silex.dev:8080/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                            ]
                        }
                    },
                    "410": {
                        "description": "The variation is no longer available, because it was removed."
                    },
                    "404": {
                        "description": "The variation with the specified identifier was not found."
                    }
                },
                "tags": [
                    "Variations"
                ]
            },
            "delete": {
                "summary": "Delete the variation.",
                "description": "Authentication is required",
                "operationId": "deleteVariation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The universally unique identifier of the variation.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "410": {
                        "description": "The variation is no longer available, because it was removed."
                    },
                    "404": {
                        "description": "The variation with the specified identifier was not found."
                    },
                    "403": {
                        "description": "The user is not allowed to delete this variation."
                    }
                },
                "tags": [
                    "Variations"
                ]
            },
            "patch": {
                "summary": "Patch properties of an existing variation",
                "description": "Authentication is required",
                "operationId": "patchVariation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The universally unique identifier of the variation.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EditDescriptionCommand"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "There is an error in the request.",
                        "schema": {
                            "$ref": "#/definitions/APIProblem"
                        }
                    },
                    "410": {
                        "description": "The variation is no longer available, because it was removed."
                    },
                    "404": {
                        "description": "The variation with the specified identifier was not found."
                    },
                    "403": {
                        "description": "The user is not allowed to patch this variation."
                    }
                },
                "tags": [
                    "Variations"
                ]
            }
        },
        "/images": {
            "post": {
                "summary": "Create a new media object for an image.",
                "description": "Authentication is required",
                "operationId": "createImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The image",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "The description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "copyrightHolder",
                        "in": "formData",
                        "description": "The copyright holder",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    },
                    "400": {
                        "description": "There is an error in the request.",
                        "schema": {
                            "$ref": "#/definitions/APIProblem"
                        }
                    }
                },
                "tags": [
                    "Media"
                ]
            }
        },
        "/media/{id}": {
            "get": {
                "summary": "View the details of a specific media object.",
                "description": "Authentication is required",
                "operationId": "getImage",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The universally unique identifier of the media object.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An media object detail.",
                        "schema": {
                            "$ref": "#/definitions/MediaObject"
                        },
                        "examples": {
                            "@id": "http://culudb-silex.dev:8080/images/04C47992-B01E-4EE4-96ED-289F22638324",
                            "@type": "schema:MediaObject",
                            "contentUrl": "http://culudb-silex.dev:8080/media/de305d54-75b4-431b-adb2-eb6b9e546014.png",
                            "thumbnailUrl": "http://culudb-silex.dev:8080/media/de305d54-75b4-431b-adb2-eb6b9e546014.png",
                            "description": "Allemaal Roze konijnen",
                            "copyrightHolder": "Toto het roze konijn"
                        }
                    },
                    "400": {
                        "description": "Media with id: {id} not found."
                    }
                },
                "tags": [
                    "Media"
                ]
            }
        },
        "/labels/{identifier}": {
            "get": {
                "summary": "View the details a label",
                "operationId": "getLabel",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/labelIdentifier"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/LabelObject"
                        }
                    }
                },
                "tags": [
                    "Label"
                ]
            },
            "delete": {
                "summary": "Delete a label",
                "operationId": "deleteLabel",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/labelIdentifier"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Label"
                ]
            },
            "patch": {
                "summary": "Update label info with one of the available commands",
                "operationId": "updateLabel",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/labelIdentifier"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the command that you want applied to the label.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patchLabelCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Label"
                ]
            }
        },
        "/labels/": {
            "get": {
                "summary": "Retrieve labels for a given search query with a given start and limit.",
                "description": "Authentication is required.",
                "operationId": "labelSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The name or part of the name of the label(s) to search (case-insensitive).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit of labels included in the result set. When omitted it returns all matching labels.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The number of labels to skip from the start of the result set. When omitted it starts from the first position.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of labels",
                        "schema": {
                            "$ref": "#/definitions/LabelSearchResult"
                        }
                    }
                },
                "tags": [
                    "Search", "Label"
                ]
            },
            "post": {
                "summary": "Create a new label",
                "description": "Authentication required",
                "operationId": "createLabel",
                "produces": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "An object containing the required information for the creation of a label.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postObjectForLabelCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Info on the command that was queued.",
                        "schema": {
                            "$ref": "#/definitions/command"
                        }
                    }
                },
                "tags": [
                    "Label"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Event",
            "description": "Operations related to events."
        },
        {
            "name": "Search",
            "description": "Operations related to search actions."
        },
        {
            "name": "User",
            "description": "Operations related to users."
        },
        {
            "name": "Label",
            "description": "Operations related to labels."
        },
        {
            "name": "Query",
            "description": "Operations related to queries."
        },
        {
            "name": "Place",
            "description": "Operations related to places."
        },
        {
            "name": "Organizer",
            "description": "Operations related to organizers."
        },
        {
            "name": "Saved search",
            "description": "Operations related to saved searches."
        },
        {
            "name": "Export",
            "description": "Operations related to exports."
        },
        {
            "name": "Variations",
            "description": "Operations related to variations."
        },
        {
            "name": "Media",
            "description": "Operations related to media."
        }
    ],
    "definitions": {
        "Event": {
            "properties": {
                "@id": {
                    "type": "string",
                    "example": "http://culudb-silex.dev:8080/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                },
                "name": {
                    "$ref": "#/definitions/TranslatableString"
                },
                "description": {
                    "$ref": "#/definitions/TranslatableString"
                },
                "available": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "image": {
                    "type": "string",
                    "example": "http://media.uitdatabank.be/20150416/153cfa0f-0d22-451e-bfd1-490b7c4ef109.jpg"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "tagged"
                    }
                },
                "calendarSummary": {
                    "type": "string",
                    "example": "Every first day of the month"
                },
                "location": {
                    "$ref": "#/definitions/Place"
                },
                "organizer": {
                    "$ref": "#/definitions/Organizer"
                },
                "bookingInfo": {
                    "$ref": "#/definitions/BookingInfo"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Term"
                    }
                },
                "creator": {
                    "type": "string",
                    "example": "evenementen@stad.diksmuide.be"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "modified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "publisher": {
                    "type": "string",
                    "example": "Invoerders Algemeen "
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "calendarType": {
                    "type": "string",
                    "enum": [
                        "unknown",
                        "permanent",
                        "periodic",
                        "single"
                    ],
                    "example": "permanent"
                },
                "typicalAgeRange": {
                    "type": "string",
                    "example": "+18"
                },
                "performer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Performer"
                    }
                },
                "sameAs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "http://www.uitinvlaanderen.be/agenda/e/zomerse-vrijdagen-den-engel/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                    }
                },
                "seeAlso": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "www.leuven.be"
                    }
                }
            },
            "required": [
                "@id",
                "name",
                "description",
                "creator",
                "created",
                "publisher",
                "calendarType"
            ]
        },
        "TranslatableString": {
            "properties": {
                "nl": {
                    "type": "string",
                    "example": "Nederlands"
                },
                "de": {
                    "type": "string",
                    "example": "Deutch"
                },
                "en": {
                    "type": "string",
                    "example": "English"
                },
                "fr": {
                    "type": "string",
                    "example": "Français"
                }
            },
            "required": [
                "nl"
            ]
        },
        "Address": {
            "properties": {
                "addressCountry": {
                    "type": "string",
                    "description": "The country code of the location.",
                    "example": "BE"
                },
                "addressLocality": {
                    "type": "string",
                    "description": "The locality name of the location.",
                    "example": "Leuven"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postalcode of the location.",
                    "example": 3000
                },
                "streetAddress": {
                    "type": "string",
                    "description": "The street name and number information of the location.",
                    "example": "Sluisstraat 79"
                }
            },
            "required": [
                "addressCountry",
                "addressLocality",
                "postalCode",
                "streetAddress"
            ]
        },
        "Term": {
            "properties": {
                "label": {
                    "type": "string",
                    "example": "Cycling"
                },
                "domain": {
                    "type": "string",
                    "example": "activities"
                },
                "id": {
                    "type": "string",
                    "example": "10.0.0.1"
                }
            },
            "required": [
                "label",
                "domain",
                "id"
            ]
        },
        "Performer": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the performer.",
                    "example": "Sindicato Sonico"
                }
            },
            "required": [
                "name"
            ]
        },
        "EventHistory": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/EventHistoryLog"
            }
        },
        "EventHistoryLog": {
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "description": {
                    "type": "string",
                    "example": "Aangemaakt in UDB2"
                },
                "author": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the author.",
                    "example": "johndoe@example.com"
                }
            },
            "required": [
                "date",
                "description"
            ]
        },
        "User": {
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "A universally unique identifier.",
                    "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                },
                "preferredLanguage": {
                    "type": "string",
                    "example": "nl"
                },
                "nick": {
                    "type": "string",
                    "example": "El Pistolero"
                },
                "password": {
                    "type": "string",
                    "example": "***"
                },
                "givenName": {
                    "type": "string",
                    "example": "Alberto"
                },
                "familyName": {
                    "type": "string",
                    "example": "Contador"
                },
                "mbox": {
                    "type": "string",
                    "example": "alberto@email.es"
                },
                "mboxVerified": {
                    "type": "boolean",
                    "example": true
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "hasChildren": {
                    "type": "boolean",
                    "example": false
                },
                "dob": {
                    "type": "string",
                    "example": "413074800"
                },
                "depiction": {
                    "type": "string",
                    "example": "//media.uitid.be/fis/rest/download/ce126667652776f0e9e55160f12f5478/uiv/default.png"
                },
                "bio": {
                    "type": "string",
                    "example": "Alberto Contador is a Spanish professional cyclist, one of six riders to have won all three Grand Tours of road cycling."
                },
                "street": {
                    "type": "string",
                    "example": "Camino de San Anton"
                },
                "zip": {
                    "type": "string",
                    "example": 28320
                },
                "city": {
                    "type": "string",
                    "example": "Madrid"
                },
                "country": {
                    "type": "string",
                    "example": "Spain"
                },
                "lifestyleProfile": {
                    "type": "string",
                    "example": "Actieve ontspanner"
                },
                "homeLocation": {
                    "$ref": "#/definitions/UserLocation"
                },
                "currentLocation": {
                    "$ref": "#/definitions/UserLocation"
                },
                "status": {
                    "type": "string",
                    "example": "public"
                },
                "points": {
                    "type": "string",
                    "example": "15"
                },
                "openid": {
                    "type": "string"
                },
                "holdsAccount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAccountType"
                    }
                },
                "privacyConfig": {
                    "$ref": "#/definitions/UserPrivacyConfig"
                },
                "pageMemberships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "adminPagesCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 5
                }
            },
            "required": [
                "id"
            ]
        },
        "UserLocation": {
            "properties": {
                "lat": {
                    "type": "number",
                    "format": "float",
                    "example": "40.2410067"
                },
                "lng": {
                    "type": "number",
                    "format": "float",
                    "example": "-3.688426"
                },
                "radius": {
                    "type": "number",
                    "format": "float",
                    "example": 3.45
                }
            }
        },
        "UserAccountType": {
            "properties": {
                "accountType": {
                    "type": "string",
                    "example": "google"
                },
                "accountServiceHomepage": {
                    "type": "string",
                    "example": "http://www.google.com"
                },
                "accountName": {
                    "type": "string",
                    "example": 101802992566828990000
                },
                "accountNick": {
                    "type": "string",
                    "example": "El Pistolero"
                },
                "accountDepiction": {
                    "type": "string",
                    "example": "//media.uitid.be/fis/download/ce126667652776f0e9e55160f12f5478/6e57ac2f-ca1c-460d-9f28-ad7506da7ed1/photo.jpg"
                },
                "private": {
                    "type": "boolean",
                    "example": true
                },
                "publishActivities": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "UserPrivacyConfig": {
            "properties": {
                "nick": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "givenName": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "familyName": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "mbox": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public"
                },
                "dob": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public"
                },
                "depiction": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public"
                },
                "bio": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public"
                },
                "homeAddress": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "homeLocation": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "currentLocation": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "openid": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                },
                "calendarId": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "private"
                }
            },
            "required": [
                "nick",
                "givenName",
                "familyName",
                "mbox",
                "gender",
                "dob",
                "depiction",
                "bio",
                "homeAddress",
                "homeLocation",
                "currentLocation",
                "calendarId"
            ]
        },
        "SearchResult": {
            "properties": {
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3562
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchMember"
                    }
                }
            },
            "required": [
                "itemsPerPage",
                "totalItems",
                "member"
            ]
        },
        "SearchMember": {
            "properties": {
                "@id": {
                    "type": "string",
                    "example": "http://culudb-silex.dev:8080/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                },
                "@type": {
                    "type": "string",
                    "enum": [
                        "Event",
                        "Place"
                    ]
                }
            },
            "required": [
                "@id",
                "@type"
            ]
        },
        "Place": {
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Or not to be."
                },
                "name": {
                    "type": "string",
                    "example": "This is the place to be"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "bookingInfo": {
                    "$ref": "#/definitions/BookingInfo"
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Term"
                    }
                }
            },
            "required": [
                "name",
                "address"
            ]
        },
        "Organizer": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "STUK"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "An email address.",
                    "example": "info@stuk.be"
                },
                "phone": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "016 320 300"
                    }
                }
            },
            "required": [
                "name"
            ]
        },
        "OrganizerCreate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "STUK"
                },
                "address": {
                    "properties": {
                        "country": {
                            "type": "string",
                            "description": "The country code of the location.",
                            "example": "BE"
                        },
                        "locality": {
                            "type": "string",
                            "description": "The locality name of the location.",
                            "example": "Leuven"
                        },
                        "postalCode": {
                            "type": "string",
                            "description": "The postalcode of the location.",
                            "example": 3000
                        },
                        "streetAddress": {
                            "type": "string",
                            "description": "The street name and number information of the location.",
                            "example": "Sluisstraat 79"
                        }
                    },
                    "required": [
                        "country",
                        "locality",
                        "postalCode",
                        "streetAddress"
                    ]
                },
                "contact": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "url",
                                    "phone",
                                    "email"
                                ]
                            },
                            "value": {
                                "type": "string",
                                "example": "http://www.stuk.be"
                            }
                        }
                    }
                }
            },
            "required": [
                "name"
            ]
        },
        "BookingInfo": {
            "properties": {
                "priceCurrency": {
                    "type": "string",
                    "example": "EUR"
                },
                "description": {
                    "type": "string",
                    "example": "No need to pay anything"
                },
                "name": {
                    "type": "string",
                    "example": "Free"
                },
                "price": {
                    "type": "number",
                    "format": "float",
                    "example": 0
                }
            },
            "required": [
                "price",
                "priceCurrency",
                "description"
            ]
        },
        "SavedSearch": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 105
                },
                "name": {
                    "type": "string",
                    "example": "Permanent in Rotselaar"
                },
                "query": {
                    "type": "string",
                    "example": "city:Rotselaar AND permanent:TRUE"
                }
            },
            "required": [
                "id",
                "name",
                "query"
            ]
        },
        "postObjectWithNewSavedSearch": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Permanent in Rotselaar"
                },
                "query": {
                    "type": "string",
                    "example": "city:Rotselaar AND permanent:TRUE"
                }
            },
            "required": [
                "name",
                "query"
            ]
        },
        "postObjectForExportRequest": {
            "properties": {
                "query": {
                    "type": "string",
                    "example": "title:bio"
                },
                "selection": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "url",
                        "description": "A url that points to an offer.",
                        "example": "http://culudb-silex.dev/event/f8597ef0-9364-4ab5-a3cc-1e344e599fc7"
                    }
                },
                "include": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "author"
                    }
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "An email address.",
                    "example": "evenementen@stad.diksmuide.be"
                }
            }
        },
        "postObjectForPdfExportRequest": {
            "properties": {
                "query": {
                    "type": "string",
                    "example": "title:bio"
                },
                "selection": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A universally unique identifier for a cultural event.",
                        "example": "0823f57e-a6bd-450a-b4f5-8459b4b11043"
                    }
                },
                "customizations": {
                    "$ref": "#/definitions/exportCustomizations"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "An email address.",
                    "example": "evenementen@stad.diksmuide.be"
                }
            },
            "required": [
                "query",
                "customizations"
            ]
        },
        "exportCustomizations": {
            "properties": {
                "brand": {
                    "type": "string",
                    "enum": [
                        "uit",
                        "uitpas",
                        "vlieg",
                        "paspartoe"
                    ]
                },
                "footer": {
                    "type": "string",
                    "example": "Organic for the win"
                },
                "publisher": {
                    "type": "string",
                    "example": "MechelenOrganic"
                },
                "subtitle": {
                    "type": "string",
                    "example": "Delicious & healthy food in Mechelen"
                },
                "title": {
                    "type": "string",
                    "example": "Organic in Mechelen"
                }
            },
            "required": [
                "brand",
                "title"
            ]
        },
        "command": {
            "required": [
                "commandId",
                "uuid"
            ],
            "properties": {
                "commandId": {
                    "type": "string",
                    "example": "8cdc13e62efaecb9d8c21d59a29b9de4"
                },
                "uuid": {
                    "type": "string",
                    "example": "0823f57e-a6bd-450a-b4f5-8459b4b11043"
                }
            }
        },
        "postObjectWithEventDescription": {
            "properties": {
                "description": {
                    "type": "string",
                    "example": "This is a description of a cultural event."
                }
            },
            "required": [
                "description"
            ]
        },
        "postObjectWithEventTitle": {
            "properties": {
                "title": {
                    "type": "string",
                    "example": "An event title"
                }
            },
            "required": [
                "title"
            ]
        },
        "labelCommand": {
            "required": [
                "label"
            ],
            "properties": {
                "label": {
                    "type": "string",
                    "example": "Bio"
                }
            }
        },
        "postObjectWithPlaceDescription": {
            "properties": {
                "description": {
                    "type": "string",
                    "example": "This is a description of a place."
                }
            },
            "required": [
                "description"
            ]
        },
        "postObjectWithPlaceTitle": {
            "properties": {
                "title": {
                    "type": "string",
                    "example": "A place title"
                }
            },
            "required": [
                "title"
            ]
        },
        "postObjectWithlabelAndMultipleOffers": {
            "properties": {
                "label": {
                    "type": "string",
                    "example": "Bio"
                },
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchMember"
                    }
                }
            },
            "required": [
                "label",
                "offers"
            ]
        },
        "postObjectWithLabelAndQuery": {
            "properties": {
                "label": {
                    "type": "string",
                    "example": "Bio"
                },
                "query": {
                    "type": "string",
                    "example": "6e169e4a-32c8-4fca-a1ce-5beb2b2ac2cc"
                }
            },
            "required": [
                "label",
                "query"
            ]
        },
        "CreateVariationCommand": {
            "properties": {
                "owner": {
                    "description": "The universally unique identifier of the owner of the variation. Currently, only the current user's id is supported.",
                    "type": "string",
                    "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                },
                "purpose": {
                    "type": "string",
                    "description": "A string describing the purpose of the variation.",
                    "example": "homepage-tips"
                },
                "same_as": {
                    "type": "string",
                    "description": "URL of the event to create a variation of.",
                    "example": "https://io.uitdatabank.be/event/0054e567-efc6-4155-b707-9fb4388d9246"
                },
                "description": {
                    "type": "string",
                    "description": "The alternative description of the event.",
                    "example": "<p>William Kentridge keert terug naar de Met voor zijn eerste nieuwe productie sinds de première door het gezelschap van The Nose, een opera die voor ophef zorgde bij de opening in 2010. Deze vindingrijke visuele kunstenaar regisseert het schokkende meesterwerk van Berg over een seksueel onweerstaanbare jonge vrouw die met haar losbandige gedrag de ondergang teweegbrengt van al wie zich door haar laat bekoren.</p>"
                }
            },
            "required": [
                "owner",
                "purpose",
                "same_as",
                "description"
            ]
        },
        "EditDescriptionCommand": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The alternative description of the event.",
                    "example": "<p>William Kentridge keert terug naar de Met voor zijn eerste nieuwe productie sinds de première door het gezelschap van The Nose, een opera die voor ophef zorgde bij de opening in 2010. Deze vindingrijke visuele kunstenaar regisseert het schokkende meesterwerk van Berg over een seksueel onweerstaanbare jonge vrouw die met haar losbandige gedrag de ondergang teweegbrengt van al wie zich door haar laat bekoren.</p>"
                }
            },
            "required": [
                "description"
            ],
            "additionalProperties": false
        },
        "VariationsList": {
            "properties": {
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event",
                        "example": {
                            "@id": "http://culudb-silex.dev:8080/variations/04C47992-B01E-4EE4-96ED-289F22638324",
                            "name": {
                                "nl": "Nederlands",
                                "de": "Deutch",
                                "en": "English",
                                "fr": "Français"
                            },
                            "description": {
                                "nl": "Alternatieve beschrijving in het Nederlands",
                                "de": "Deutch",
                                "en": "English",
                                "fr": "Français"
                            },
                            "available": "2015-05-07T12:02:53+00:00",
                            "image": "http://media.uitdatabank.be/20150416/153cfa0f-0d22-451e-bfd1-490b7c4ef109.jpg",
                            "labels": [
                                "tagged"
                            ],
                            "calendarSummary": "Every first day of the month",
                            "location": {
                                "description": "Or not to be.",
                                "name": "This is the place to be",
                                "address": {
                                    "addressCountry": "BE",
                                    "addressLocality": "Leuven",
                                    "postalCode": 3000,
                                    "streetAddress": "Sluisstraat 79"
                                },
                                "bookingInfo": {
                                    "priceCurrency": "EUR",
                                    "description": "No need to pay anything",
                                    "name": "Free",
                                    "price": 0
                                },
                                "terms": [
                                    {
                                        "label": "Cycling",
                                        "domain": "activities",
                                        "id": "10.0.0.1"
                                    }
                                ]
                            },
                            "organizer": {
                                "name": "STUK",
                                "address": {
                                    "addressCountry": "BE",
                                    "addressLocality": "Leuven",
                                    "postalCode": 3000,
                                    "streetAddress": "Sluisstraat 79"
                                },
                                "email": "info@stuk.be",
                                "phone": [
                                    "016 320 300"
                                ]
                            },
                            "bookingInfo": {
                                "priceCurrency": "EUR",
                                "description": "No need to pay anything",
                                "name": "Free",
                                "price": 0
                            },
                            "terms": [
                                {
                                    "label": "Cycling",
                                    "domain": "activities",
                                    "id": "10.0.0.1"
                                }
                            ],
                            "creator": "evenementen@stad.diksmuide.be",
                            "created": "2015-05-07T12:02:53+00:00",
                            "modified": "2015-05-07T12:02:53+00:00",
                            "publisher": "Invoerders Algemeen ",
                            "endDate": "2015-05-07T12:02:53+00:00",
                            "startDate": "2015-05-07T12:02:53+00:00",
                            "calendarType": "permanent",
                            "typicalAgeRange": "+18",
                            "performer": [
                                {
                                    "name": "Sindicato Sonico"
                                }
                            ],
                            "sameAs": [
                                "http://culudb-silex.dev:8080/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                            ]
                        }
                    }
                }
            },
            "required": [
                "itemsPerPage",
                "totalItems",
                "member"
            ]
        },
        "PagedCollection": {
            "properties": {
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Place"
                    }
                }
            },
            "required": [
                "itemsPerPage",
                "totalItems",
                "member"
            ]
        },
        "PlacesList": {
            "allOf": [
                {
                    "$ref": "#/definitions/PagedCollection"
                },
                {
                    "properties": {
                        "member": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Place"
                            }
                        }
                    }
                }
            ]
        },
        "APIProblem": {
            "properties": {
                "type": {
                    "type": "string",
                    "format": "url"
                },
                "title": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "validation_messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "title",
                "type",
                "status"
            ]
        },
        "eventCreationData": {
            "properties": {
                "name": {
                    "type": "object",
                    "properties": {
                        "nl": {
                            "type": "string",
                            "example": "Super Awesome Party Night"
                        }
                    }
                },
                "type": {
                    "type": "object",
                    "description": "One of the event types available at: http://taxonomy.uitdatabank.be/api/domain/eventtype/classification",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "0.50.4.0.0"
                        },
                        "label": {
                            "type": "string",
                            "example": "Concert"
                        },
                        "domain": {
                            "type": "string",
                            "enum": [
                                "eventtype"
                            ]
                        }
                    }
                },
                "location": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A universally unique identifier.",
                            "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the location.",
                            "example": "Versuz"
                        },
                        "address": {
                            "type": "object",
                            "properties": {
                                "addressCountry": {
                                    "type": "string",
                                    "example": "BE",
                                    "format": "ISO 3166-1 alpha-2"
                                },
                                "addressLocality": {
                                    "type": "string",
                                    "example": "Hasselt"
                                },
                                "postalCode": {
                                    "type": "string",
                                    "format": "postal code",
                                    "example": "3500"
                                },
                                "streetAddress": {
                                    "type": "string",
                                    "example": "Gouverneur Verwilghensingel 70",
                                    "format": "street name and number"
                                }
                            }
                        }
                    }
                },
                "calendarType": {
                    "type": "string",
                    "enum": [
                        "single",
                        "multiple",
                        "periodic",
                        "permanent"
                    ]
                },
                "openingHours": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "string",
                                "enum": [
                                    "maandag",
                                    "dinsdag",
                                    "woensdag",
                                    "donderdag",
                                    "vrijdag",
                                    "zaterdag",
                                    "zondag"
                                ]
                            },
                            "opens": {
                                "type": "string",
                                "example": "04:20"
                            },
                            "closes": {
                                "type": "string",
                                "example": "06:66"
                            }
                        }
                    }
                },
                "timestamps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2000-12-30"
                            },
                            "startHour": {
                                "type": "string",
                                "example": "04:20"
                            },
                            "endHour": {
                                "type": "string",
                                "example": "06:66"
                            }
                        }
                    }
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-05-07T12:02:53+00:00"
                },
                "theme": {
                    "type": "object",
                    "description": "One of the available themes from http://taxonomy.uitdatabank.be/api/domain/theme/classification",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "1.2.1.0.0"
                        },
                        "label": {
                            "type": "string",
                            "example": "Architectuur"
                        },
                        "domain": {
                            "type": "string",
                            "enum": [
                                "thema"
                            ],
                            "description": "This is hardcoded to 'thema' in the current application. It is passed to the API and then overwritten."
                        }
                    }
                }
            },
            "required": [
                "name",
                "type",
                "theme",
                "location",
                "calendarType",
                "startDate"
            ]
        },
        "MediaObject": {
            "properties": {
                "@id": {
                    "type": "string",
                    "example": "http://culudb-silex.dev:8080/images/04C47992-B01E-4EE4-96ED-289F22638324"
                },
                "@type": {
                    "type": "string",
                    "example": "schema:MediaObject"
                },
                "contentUrl": {
                    "type": "string",
                    "example": "http://culudb-silex.dev:8080/media/de305d54-75b4-431b-adb2-eb6b9e546014.png"
                },
                "thumbnailUrl": {
                    "type": "string",
                    "example": "http://culudb-silex.dev:8080/media/de305d54-75b4-431b-adb2-eb6b9e546014.png"
                },
                "description": {
                    "type": "string",
                    "example": "Allemaal Roze konijnen"
                },
                "copyrightHolder": {
                    "type": "string",
                    "example": "Toto het roze konijn"
                }
            }
        },
        "addImageToOffer": {
            "properties": {
                "mediaObjectId": {
                    "type": "string",
                    "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
            },
            "required": [
                "mediaObjectId"
            ]
        },
        "addOrganizerToOffer": {
            "properties": {
                "organizer": {
                    "type": "string",
                    "format": "uuid",
                    "example": "3aad5023-84e2-4ba9-b1ce-201cee64504c"
                }
            },
            "required": [
                "organizer"
            ]
        },
        "selectMainImage": {
            "properties": {
                "mediaObjectId": {
                    "type": "string",
                    "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
            },
            "required": [
                "mediaObjectId"
            ]
        },
        "imageUpdateInfo": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the image."
                },
                "copyrightHolder": {
                    "type": "string",
                    "example": "Dirk Dirkington",
                    "description": "The name of the copyright holder."
                }
            },
            "required": [
                "description",
                "copyrightHolder"
            ]
        },
        "ListOfOrganizers": {
            "properties": {
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3562
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Organizer"
                    }
                }
            },
            "required": [
                "itemsPerPage",
                "totalItems",
                "member"
            ]
        },
        "OrganizerId": {
            "properties": {
                "organizerId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "f8597ef0-9364-4ab5-a3cc-1e344e599fc7"
                },
                "url": {
                    "type": "string",
                    "format": "url",
                    "example": "http://culudb-silex.dev:8080/organizer/f8597ef0-9364-4ab5-a3cc-1e344e599fc7"
                }
            },
            "required": [
                "organizerId",
                "url"
            ]
        },
        "postPlaceObjectMajorInfo": {
            "properties": {
                "name": {
                    "type": "object",
                    "properties": {
                        "nl": {
                            "type": "string",
                            "example": "Test place"
                        }
                    }
                },
                "type": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "0.14.0.0.0"
                        },
                        "label": {
                            "type": "string",
                            "example": "Monument"
                        },
                        "domain": {
                            "type": "string",
                            "enum": [
                                "eventtype"
                            ]
                        }
                    }
                },
                "location": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "object",
                            "properties": {
                                "addressCountry": {
                                    "type": "string",
                                    "example": "BE",
                                    "format": "ISO 3166-1 alpha-2"
                                },
                                "addressLocality": {
                                    "type": "string",
                                    "example": "Leuven"
                                },
                                "postalCode": {
                                    "type": "string",
                                    "format": "postal code",
                                    "example": "3000"
                                },
                                "streetAddress": {
                                    "type": "string",
                                    "example": "Teststraat 5",
                                    "format": "street name and number"
                                }
                            }
                        }
                    }
                },
                "calendarType": {
                    "type": "string",
                    "enum": [
                        "single",
                        "multiple",
                        "periodic",
                        "permanent"
                    ],
                    "example": "permanent"
                },
                "openingHours": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "string",
                                "enum": [
                                    "maandag",
                                    "dinsdag",
                                    "woensdag",
                                    "donderdag",
                                    "vrijdag",
                                    "zaterdag",
                                    "zondag"
                                ],
                                "example": ["tuesday"]
                            },
                            "opens": {
                                "type": "string",
                                "example": "00:30"
                            },
                            "closes": {
                                "type": "string",
                                "example": "12:30"
                            },
                            "label": {
                                "type": "string",
                                "example": "Dinsdag"
                            }
                        }
                    }
                }
            },
            "required": [
                "name",
                "type",
                "location",
                "calendarType",
                "openingHours"
            ]
        },
        "postPlaceObjectBookingInfo": {
            "properties": {
                "bookingInfo": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "format": "url",
                            "example": "http://google.be"
                        },
                        "urlLabel": {
                            "type": "string",
                            "example": "Reserveer plaatsen"
                        },
                        "email": {
                            "type": "string",
                            "format": "email",
                            "example": "joske@2dotstwice.be"
                        },
                        "phone": {
                            "type": "string",
                            "example": "0123456789"
                        }
                    }
                }
            },
            "required": [
                "bookingInfo"
            ]
        },
        "postPlaceObjectContactPoint": {
            "properties": {
                "contactPoint": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "url",
                                "example": "http://google.be"
                            }
                        },
                        "email": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "email",
                                "example": "joske@2dotstwice.be"
                            }
                        },
                        "phone": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "phone",
                                "example": ["0123456789"]
                            }
                        }
                    },
                    "required": [
                        "url",
                        "email",
                        "phone"
                    ]
                }
            },
            "required": [
                "contactPoint"
            ]
        },
        "postObjectForLabelCreation": {
            "required": [
                "name",
                "visibility",
                "privacy"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Bloso"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "visible",
                        "invisible"
                    ],
                    "example": "visible",
                    "default": "invisible"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public",
                    "default": "public"
                },
                "parentId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "3aad5023-84e2-4ba9-b1ce-201cee64504c",
                    "description": "An optional property that references the parent label."
                }
            }
        },
        "patchLabelCommand": {
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "enum": [
                        "MakeInvisible",
                        "MakeVisible",
                        "MakePrivate",
                        "MakePublic"
                    ]
                }
            }
        },
        "LabelObject": {
            "required": [
                "uuid",
                "name",
                "privacy",
                "visibility"
            ],
            "properties": {
                "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "3aad5023-84e2-4ba9-b1ce-201cee64504c"
                },
                "name": {
                    "type": "string",
                    "example": "Bloso"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "visible",
                        "invisible"
                    ],
                    "example": "visible"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "private",
                        "public"
                    ],
                    "example": "public"
                },
                "parentUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "3aad5023-84e2-4ba9-b1ce-201cee64504c"
                }
            }
        },
        "LabelSearchResult": {
            "properties": {
                "itemsPerPage": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3562
                },
                "member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LabelObject"
                    }
                }
            },
            "required": [
                "itemsPerPage",
                "totalItems",
                "member"
            ]
        },
        "typicalAgeRangeData": {
            "properties": {
                "typicalAgeRange": {
                    "type": "string",
                    "example": "1-12"
                }
            },
            "required": [
                "typicalAgeRange"
            ]
        }
    },
    "parameters": {
        "labelIdentifier": {
            "name": "identifier",
            "in": "path",
            "description": "The unique name or uuid that identifies a label.",
            "required": true,
            "type": "string"
        },
        "labelId": {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "format": "uuid",
            "description": "The unique identifier of a label."
        }
    }
}
